1,var a = 4; var b = a ; print(a);
2,for(var i=1;i<=1;i++){print("a");print("b");print("c")}print("aaa");print("bbb")
6,for(var i=1;i<=5;i++){print("a")}print("aaa");
2,if(0){print("a");print("b");print("c")}else{print("c");print("b");print("a")}
6,var i=1;while(i<=5){i++}
6,var i=1;do{print("a");print("b");i++}while(i<=5)
2,var i=2;switch(i){case 0:{print("0");print("0");print("0");break}case 1:{print("1");print("1");print("1");break}default:{print("d");print("d");print("d");break}}
7,var i=1;while(i<=5){if(i==3){i++;continue};print("a");i++}
4,var i=1;while(i<=5){if(i==3)break;print("a");i++}
4,var i=1;var a=i;while(i<=5){if(i==3)break;print("a");i++}var b=i;
3,function FunA(){var a=2;var b=3;var c=a}function FunB(){FunA()}FunB();
6,function FunC(){var a=4;var b=a;print(a);for(var i=1;i<=1;i++){print("a");print("b");print("c")}print("aaa");print("bbb")}function FunA(){var a=2;var b=3;var c=a;FunC();var i=0;switch(i){case 0:{print("0");print("0");print("0");break}case 1:{print("1");print("1");print("1");break}default:{print("d");print("d");print("d");break}}}function FunB(){FunA()}FunB();
102,var count_times=1;function FunB(){count_times++;if(count_times>100){return}return FunB()}FunB();
5,function Biology(age){this.age=age};Biology.prototype={constructor:Biology,name:'biology',printAll:function(){print("printA")}};var biology_1=new Biology(16);var biology_2=new Biology(18);biology_1.printAll();biology_2.printAll();
1,var Biology_1={};var Biology_2=new Object();var Biology_3=Object.create(null);
5,function Biology(name){var tempObj=new Object();tempObj.name=name;tempObj.printName=function(){print(this.name)};return tempObj}var animals=Biology('animals');var plants=Biology('plants');animals.printName();plants.printName();animals.constructor;
7,function Biology(){};Biology.prototype.name='biology';Biology.prototype.printName=function(){print(this.name)};var animals=new Biology();animals.printName();var plants=new Biology();plants.printName();print(animals.name);animals.name='animals';print(animals.name);print(plants.name);animals.printName=function(){print('animals')};animals.printName();plants.printName();
2,function Biology(){};Biology.prototype={name:'biology',printName:function(){console.log(this.name)}};var biology=new Biology();print(biology.name);print(biology.constructor);
2,function Biology(){};var biology=new Biology();Biology.prototype={constructor:Biology,name:'biology',printName:function(){console.log(this.name)}};print(biology.name);
5,function Biology(age){this.age=age};Biology.prototype={constructor:Biology,name:'biology',printAll:function(){print(this.name+':'+this.age)}};var biology_1=new Biology(16);var biology_2=new Biology(18);biology_1.printAll();biology_2.printAll();
11,function Biology(){function privateMethod(){return'私有方法'}var privateProperty='私有属性';this.publicProperty='实例属性';Biology.prototype.staticProperty='原型属性';var privateMethod=function(){return'私有方法'};this.publicMethod=function(){return'实例方法'};Biology.prototype.staticMethod=function(){return'原型方法'};this.getPrivateProperty=function(){return privateProperty};this.setPrivateProperty=function(property){privateProperty=property};this.getPrivateMethod=function(){return privateMethod()}}var biology=new Biology();var biology_2=new Biology();biology.publicProperty='修改后的实例属性';biology.setPrivateProperty('改变后的私有属性');print(biology.getPrivateProperty());Biology.prototype.staticProperty='修改后的原型属性';print(biology.staticProperty);print(biology_2.staticProperty);print(biology.privateMethod);print(biology.publicMethod());print(biology.getPrivateMethod());print(biology.staticMethod());Biology.prototype.staticMethod=function(){return'修改后的原型方法'};print(biology.staticMethod());print(biology_2.staticMethod());
5,function Biology(age){this.age=age};Biology.prototype={constructor:Biology,name:'biology',printAll:function(){print(this.name+':'+this.age)}};var biology_1=new Biology(16);var biology_2=new Biology(18);biology_1.printAll();biology_2.printAll();
11,function Biology(){function privateMethod(){return'私有方法'}var privateProperty='私有属性';this.publicProperty='实例属性';Biology.prototype.staticProperty='原型属性';var privateMethod=function(){return'私有方法'};this.publicMethod=function(){return'实例方法'};Biology.prototype.staticMethod=function(){return'原型方法'};this.getPrivateProperty=function(){return privateProperty};this.setPrivateProperty=function(property){privateProperty=property};this.getPrivateMethod=function(){return privateMethod()}}var biology=new Biology();var biology_2=new Biology();biology.publicProperty='修改后的实例属性';biology.setPrivateProperty('改变后的私有属性');print(biology.getPrivateProperty());Biology.prototype.staticProperty='修改后的原型属性';print(biology.staticProperty);print(biology_2.staticProperty);print(biology.privateMethod);print(biology.publicMethod());print(biology.getPrivateMethod());print(biology.staticMethod());Biology.prototype.staticMethod=function(){return'修改后的原型方法'};print(biology.staticMethod());print(biology_2.staticMethod());
